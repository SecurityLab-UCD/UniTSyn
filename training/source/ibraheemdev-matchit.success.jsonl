{"test_id": "ibraheemdev-matchit/ibraheemdev-matchit-64af4bd/tests/tree.rs::issue_22", "test": "fn issue_22() {\n    let mut x = Router::new();\n    x.insert(\"/foo_bar\", \"Welcome!\").unwrap();\n    x.insert(\"/foo/bar\", \"Welcome!\").unwrap();\n    assert_eq!(x.at(\"/foo/\").unwrap_err(), MatchError::NotFound);\n\n    let mut x = Router::new();\n    x.insert(\"/foo\", \"Welcome!\").unwrap();\n    x.insert(\"/foo/bar\", \"Welcome!\").unwrap();\n    assert_eq!(x.at(\"/foo/\").unwrap_err(), MatchError::ExtraTrailingSlash);\n}", "code_id": "ibraheemdev-matchit/ibraheemdev-matchit-64af4bd/src/router.rs::at", "code": "pub fn at<'m, 'p>(&'m self, path: &'p str) -> Result<Match<'m, 'p, &'m T>, MatchError> {\n        match self.root.at(path.as_bytes()) {\n            Ok((value, params)) => Ok(Match {\n                // SAFETY: We only expose &mut T through &mut self\n                value: unsafe { &*value.get() },\n                params,\n            }),\n            Err(e) => Err(e),\n        }\n    }", "docstring": null}
