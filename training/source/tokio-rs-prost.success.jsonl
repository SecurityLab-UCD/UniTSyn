{"test_id": "tokio-rs-prost/tokio-rs-prost-0c89fa6/tests/src/extern_paths.rs::test", "test": "fn test() {\n    use crate::packages::gizmo;\n    use crate::packages::DoIt;\n    use prost::Message;\n\n    let mut widget_factory = widget::factory::WidgetFactory::default();\n    assert_eq!(0, widget_factory.encoded_len());\n\n    widget_factory.inner = Some(widget::factory::widget_factory::Inner {});\n    assert_eq!(2, widget_factory.encoded_len());\n\n    widget_factory.root = Some(Root {});\n    assert_eq!(4, widget_factory.encoded_len());\n\n    widget_factory.root_inner = Some(root::Inner {});\n    assert_eq!(6, widget_factory.encoded_len());\n\n    widget_factory.widget = Some(widget::Widget {});\n    assert_eq!(8, widget_factory.encoded_len());\n\n    widget_factory.widget_inner = Some(widget::widget::Inner {});\n    assert_eq!(10, widget_factory.encoded_len());\n\n    widget_factory.gizmo = Some(gizmo::Gizmo {});\n    assert_eq!(12, widget_factory.encoded_len());\n    widget_factory.gizmo.as_ref().map(DoIt::do_it);\n\n    widget_factory.gizmo_inner = Some(gizmo::gizmo::Inner {});\n    assert_eq!(14, widget_factory.encoded_len());\n}", "code_id": "tokio-rs-prost/tokio-rs-prost-0c89fa6/prost-derive/src/field/group.rs::encoded_len", "code": "pub fn encoded_len(&self, ident: TokenStream) -> TokenStream {\n        let tag = self.tag;\n        match self.label {\n            Label::Optional => quote! {\n                #ident.as_ref().map_or(0, |msg| ::prost::encoding::group::encoded_len(#tag, msg))\n            },\n            Label::Required => quote! {\n                ::prost::encoding::group::encoded_len(#tag, &#ident)\n            },\n            Label::Repeated => quote! {\n                ::prost::encoding::group::encoded_len_repeated(#tag, &#ident)\n            },\n        }\n    }", "docstring": null}
{"test_id": "tokio-rs-prost/tokio-rs-prost-0c89fa6/tests/src/no_root_packages/mod.rs::test", "test": "fn test() {\n    use prost::Message;\n\n    let mut widget_factory = widget::factory::WidgetFactory::default();\n    assert_eq!(0, widget_factory.encoded_len());\n\n    widget_factory.inner = Some(widget::factory::widget_factory::Inner {});\n    assert_eq!(2, widget_factory.encoded_len());\n\n    widget_factory.root = Some(Root {});\n    assert_eq!(4, widget_factory.encoded_len());\n\n    widget_factory.root_inner = Some(root::Inner {});\n    assert_eq!(6, widget_factory.encoded_len());\n\n    widget_factory.widget = Some(widget::Widget {});\n    assert_eq!(8, widget_factory.encoded_len());\n\n    widget_factory.widget_inner = Some(widget::widget::Inner {});\n    assert_eq!(10, widget_factory.encoded_len());\n\n    widget_factory.gizmo = Some(gizmo::Gizmo {});\n    assert_eq!(12, widget_factory.encoded_len());\n\n    widget_factory.gizmo_inner = Some(gizmo::gizmo::Inner {});\n    assert_eq!(14, widget_factory.encoded_len());\n}", "code_id": "tokio-rs-prost/tokio-rs-prost-0c89fa6/prost-derive/src/field/group.rs::encoded_len", "code": "pub fn encoded_len(&self, ident: TokenStream) -> TokenStream {\n        let tag = self.tag;\n        match self.label {\n            Label::Optional => quote! {\n                #ident.as_ref().map_or(0, |msg| ::prost::encoding::group::encoded_len(#tag, msg))\n            },\n            Label::Required => quote! {\n                ::prost::encoding::group::encoded_len(#tag, &#ident)\n            },\n            Label::Repeated => quote! {\n                ::prost::encoding::group::encoded_len_repeated(#tag, &#ident)\n            },\n        }\n    }", "docstring": null}
{"test_id": "tokio-rs-prost/tokio-rs-prost-0c89fa6/tests/src/packages/mod.rs::test", "test": "fn test() {\n    use prost::Message;\n\n    let mut widget_factory = widget::factory::WidgetFactory::default();\n    assert_eq!(0, widget_factory.encoded_len());\n\n    widget_factory.inner = Some(widget::factory::widget_factory::Inner {});\n    assert_eq!(2, widget_factory.encoded_len());\n\n    widget_factory.root = Some(Root {});\n    assert_eq!(4, widget_factory.encoded_len());\n\n    widget_factory.root_inner = Some(root::Inner {});\n    assert_eq!(6, widget_factory.encoded_len());\n\n    widget_factory.widget = Some(widget::Widget {});\n    assert_eq!(8, widget_factory.encoded_len());\n\n    widget_factory.widget_inner = Some(widget::widget::Inner {});\n    assert_eq!(10, widget_factory.encoded_len());\n\n    widget_factory.gizmo = Some(gizmo::Gizmo {});\n    assert_eq!(12, widget_factory.encoded_len());\n\n    widget_factory.gizmo_inner = Some(gizmo::gizmo::Inner {});\n    assert_eq!(14, widget_factory.encoded_len());\n}", "code_id": "tokio-rs-prost/tokio-rs-prost-0c89fa6/prost-derive/src/field/group.rs::encoded_len", "code": "pub fn encoded_len(&self, ident: TokenStream) -> TokenStream {\n        let tag = self.tag;\n        match self.label {\n            Label::Optional => quote! {\n                #ident.as_ref().map_or(0, |msg| ::prost::encoding::group::encoded_len(#tag, msg))\n            },\n            Label::Required => quote! {\n                ::prost::encoding::group::encoded_len(#tag, &#ident)\n            },\n            Label::Repeated => quote! {\n                ::prost::encoding::group::encoded_len_repeated(#tag, &#ident)\n            },\n        }\n    }", "docstring": null}
