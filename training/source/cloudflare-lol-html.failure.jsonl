{"test_id": "cloudflare-lol-html/cloudflare-lol-html-7967765/fuzz/target/x86_64-unknown-linux-gnu/release/build/test_case-1918b7fe7d0334c5/out/bindings.rs::bindgen_test_layout_max_align_t", "test": "fn bindgen_test_layout_max_align_t() {\n    const UNINIT: ::std::mem::MaybeUninit<max_align_t> = ::std::mem::MaybeUninit::uninit();\n    let ptr = UNINIT.as_ptr();\n    assert_eq!(\n        ::std::mem::size_of::<max_align_t>(),\n        32usize,\n        concat!(\"Size of: \", stringify!(max_align_t))\n    );\n    assert_eq!(\n        ::std::mem::align_of::<max_align_t>(),\n        16usize,\n        concat!(\"Alignment of \", stringify!(max_align_t))\n    );\n    assert_eq!(\n        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce1) as usize - ptr as usize },\n        0usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(max_align_t),\n            \"::\",\n            stringify!(__clang_max_align_nonce1)\n        )\n    );\n    assert_eq!(\n        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce2) as usize - ptr as usize },\n        16usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(max_align_t),\n            \"::\",\n            stringify!(__clang_max_align_nonce2)\n        )\n    );\n}", "error": "Not Definition Found"}
{"test_id": "cloudflare-lol-html/cloudflare-lol-html-7967765/fuzz/target/x86_64-unknown-linux-gnu/release/build/test_case-1918b7fe7d0334c5/out/bindings.rs::bindgen_test_layout_lol_html_str_t", "test": "fn bindgen_test_layout_lol_html_str_t() {\n    const UNINIT: ::std::mem::MaybeUninit<lol_html_str_t> = ::std::mem::MaybeUninit::uninit();\n    let ptr = UNINIT.as_ptr();\n    assert_eq!(\n        ::std::mem::size_of::<lol_html_str_t>(),\n        16usize,\n        concat!(\"Size of: \", stringify!(lol_html_str_t))\n    );\n    assert_eq!(\n        ::std::mem::align_of::<lol_html_str_t>(),\n        8usize,\n        concat!(\"Alignment of \", stringify!(lol_html_str_t))\n    );\n    assert_eq!(\n        unsafe { ::std::ptr::addr_of!((*ptr).data) as usize - ptr as usize },\n        0usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(lol_html_str_t),\n            \"::\",\n            stringify!(data)\n        )\n    );\n    assert_eq!(\n        unsafe { ::std::ptr::addr_of!((*ptr).len) as usize - ptr as usize },\n        8usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(lol_html_str_t),\n            \"::\",\n            stringify!(len)\n        )\n    );\n}", "error": "Not Definition Found"}
{"test_id": "cloudflare-lol-html/cloudflare-lol-html-7967765/fuzz/target/x86_64-unknown-linux-gnu/release/build/test_case-1918b7fe7d0334c5/out/bindings.rs::bindgen_test_layout_lol_html_text_chunk_content_t", "test": "fn bindgen_test_layout_lol_html_text_chunk_content_t() {\n    const UNINIT: ::std::mem::MaybeUninit<lol_html_text_chunk_content_t> =\n        ::std::mem::MaybeUninit::uninit();\n    let ptr = UNINIT.as_ptr();\n    assert_eq!(\n        ::std::mem::size_of::<lol_html_text_chunk_content_t>(),\n        16usize,\n        concat!(\"Size of: \", stringify!(lol_html_text_chunk_content_t))\n    );\n    assert_eq!(\n        ::std::mem::align_of::<lol_html_text_chunk_content_t>(),\n        8usize,\n        concat!(\"Alignment of \", stringify!(lol_html_text_chunk_content_t))\n    );\n    assert_eq!(\n        unsafe { ::std::ptr::addr_of!((*ptr).data) as usize - ptr as usize },\n        0usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(lol_html_text_chunk_content_t),\n            \"::\",\n            stringify!(data)\n        )\n    );\n    assert_eq!(\n        unsafe { ::std::ptr::addr_of!((*ptr).len) as usize - ptr as usize },\n        8usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(lol_html_text_chunk_content_t),\n            \"::\",\n            stringify!(len)\n        )\n    );\n}", "error": "Not Definition Found"}
{"test_id": "cloudflare-lol-html/cloudflare-lol-html-7967765/fuzz/target/x86_64-unknown-linux-gnu/release/build/test_case-1918b7fe7d0334c5/out/bindings.rs::bindgen_test_layout_lol_html_memory_settings_t", "test": "fn bindgen_test_layout_lol_html_memory_settings_t() {\n    const UNINIT: ::std::mem::MaybeUninit<lol_html_memory_settings_t> =\n        ::std::mem::MaybeUninit::uninit();\n    let ptr = UNINIT.as_ptr();\n    assert_eq!(\n        ::std::mem::size_of::<lol_html_memory_settings_t>(),\n        16usize,\n        concat!(\"Size of: \", stringify!(lol_html_memory_settings_t))\n    );\n    assert_eq!(\n        ::std::mem::align_of::<lol_html_memory_settings_t>(),\n        8usize,\n        concat!(\"Alignment of \", stringify!(lol_html_memory_settings_t))\n    );\n    assert_eq!(\n        unsafe {\n            ::std::ptr::addr_of!((*ptr).preallocated_parsing_buffer_size) as usize - ptr as usize\n        },\n        0usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(lol_html_memory_settings_t),\n            \"::\",\n            stringify!(preallocated_parsing_buffer_size)\n        )\n    );\n    assert_eq!(\n        unsafe { ::std::ptr::addr_of!((*ptr).max_allowed_memory_usage) as usize - ptr as usize },\n        8usize,\n        concat!(\n            \"Offset of field: \",\n            stringify!(lol_html_memory_settings_t),\n            \"::\",\n            stringify!(max_allowed_memory_usage)\n        )\n    );\n}", "error": "Not Definition Found"}
