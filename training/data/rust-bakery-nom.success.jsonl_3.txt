fn expr(input: &[u8]) -> IResult<&[u8], i64> {
  let (input, init) = term(input)?;
  fold_many0(
    pair(one_of("+-"), term),
    move || init,
    |acc, (op, val)| {
      if op == '+' {
        acc + val
      } else {
        acc - val
      }
    },
  )(input)
}
fn parens_test() {
  assert_eq!(expr(" (  2 )"), Ok(("", 2)));
  assert_eq!(expr(" 2* (  3 + 4 ) "), Ok(("", 14)));
  assert_eq!(expr("  2*2 / ( 5 - 1) + 3"), Ok(("", 4)));
}