pub fn roundtrip<F>(float: F, buffer: &mut [u8]) -> Result<(), String>
where
    F: RawFloat + ToLexical + std::str::FromStr + std::string::ToString,
{
    let bytes = float.to_lexical(buffer);
    let string = unsafe { std::str::from_utf8_unchecked(bytes) };
    let roundtrip = string.parse::<F>().map_err(|_| float.to_string())?;
    let is_equal = if float.is_nan() {
        roundtrip.is_nan()
    } else {
        float == roundtrip
    };
    if !is_equal {
        return Err(float.to_string());
    }
    Ok(())
}
fn u32_pow2_test() {
    let values: &[u32] = &[
        0, 1, 2, 3, 4, 5, 7, 8, 9, 15, 16, 17, 31, 32, 33, 63, 64, 65, 127, 128, 129, 255, 256,
        257, 511, 512, 513, 1023, 1024, 1025, 2047, 2048, 2049, 4095, 4096, 4097, 8191, 8192, 8193,
        16383, 16384, 16385, 32767, 32768, 32769, 65535, 65536, 65537, 131071, 131072, 131073,
        262143, 262144, 262145, 524287, 524288, 524289, 1048575, 1048576, 1048577, 2097151,
        2097152, 2097153, 4194303, 4194304, 4194305, 8388607, 8388608, 8388609, 16777215, 16777216,
        16777217, 33554431, 33554432, 33554433, 67108863, 67108864, 67108865, 134217727, 134217728,
        134217729, 268435455, 268435456, 268435457, 536870911, 536870912, 536870913, 1073741823,
        1073741824, 1073741825, 2147483647, 2147483648, 2147483649, 4294967295,
    ];
    for &i in values.iter() {
        assert_eq!(i, roundtrip(i));
    }
}