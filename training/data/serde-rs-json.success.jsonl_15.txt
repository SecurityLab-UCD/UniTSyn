pub(crate) fn mantissa_exponent(exponent: i32, fraction_digits: usize, truncated: usize) -> i32 {
    if fraction_digits > truncated {
        exponent.saturating_sub(into_i32(fraction_digits - truncated))
    } else {
        exponent.saturating_add(into_i32(truncated - fraction_digits))
    }
}
fn mantissa_exponent_test() {
    assert_eq!(mantissa_exponent(10, 5, 0), 5);
    assert_eq!(mantissa_exponent(0, 5, 0), -5);
    assert_eq!(
        mantissa_exponent(i32::max_value(), 5, 0),
        i32::max_value() - 5
    );
    assert_eq!(mantissa_exponent(i32::max_value(), 0, 5), i32::max_value());
    assert_eq!(mantissa_exponent(i32::min_value(), 5, 0), i32::min_value());
    assert_eq!(
        mantissa_exponent(i32::min_value(), 0, 5),
        i32::min_value() + 5
    );
}